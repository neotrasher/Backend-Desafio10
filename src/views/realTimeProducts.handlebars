<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Real-Time Products</title>
</head>

<body>
    <h1>Real-Time Products</h1>
    <h2>Agregar Nuevo Producto</h2>
    <form id="addProductForm">
        <label for="title">Título:</label>
        <input type="text" id="title" name="title" required>
        <label for="price">Precio:</label>
        <input type="number" id="price" name="price" step="0.01" required>
        <button type="submit">Agregar Producto</button>
    </form>
    <h2>Eliminar Producto</h2>
    <ul id="productList">
        {{#each products}}
        <li data-product-id="{{this.id}}">
            {{this.title}} - {{this.price}}
            <button class="delete-button" data-product-id="{{this.id}}" style="background-color: red;">Eliminar</button>
        </li>
        {{/each}}
    </ul>

    <script src="/socket.io/socket.io.js"></script>
    <script>
        // Establecer la conexión WebSocket
        const socket = io();

        // Escuchar el evento 'productCreated' y actualizar la lista en tiempo real
        socket.on('productCreated', (newProduct) => {
            const productList = document.querySelector('ul');
            const listItem = document.createElement('li');
            listItem.textContent = `${newProduct.title} - ${newProduct.price}`;
            listItem.setAttribute('data-product-id', newProduct.id);
            productList.appendChild(listItem);
        });

        // Escuchar el evento 'productDeleted' y eliminar el producto de la lista en tiempo real
        socket.on('productDeleted', (deletedProductId) => {
            console.log('Producto eliminado:', deletedProductId);
            const productList = document.querySelector('ul');
            const listItem = Array.from(productList.children).find((li) => {
                const productId = li.getAttribute('data-product-id');
                return productId === deletedProductId;
            });

            if (listItem) {
                productList.removeChild(listItem);
            }
        });

        const addProductForm = document.getElementById('addProductForm');
        addProductForm.addEventListener('submit', (event) => {
            event.preventDefault();

            const title = document.getElementById('title').value;
            const price = parseFloat(document.getElementById('price').value);

            socket.emit('createProduct', { title, price });

            addProductForm.reset();
        });

        const productList = document.getElementById('productList');
        productList.addEventListener('click', (event) => {
            if (event.target.classList.contains('delete-button')) {
                const productId = event.target.parentElement.getAttribute('data-product-id');
                console.log('Eliminar producto con ID:', productId);
                socket.emit('deleteProduct', productId);
            }
        });
    </script>
</body>

</html>